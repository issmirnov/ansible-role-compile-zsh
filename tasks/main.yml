---
- name: load distribution specific variables
  include_vars: "{{ ansible_os_family | lower }}.yml"

- name: remove system installed zsh
  package:
    name: zsh
    state: absent
  when: remove_system_zsh

- name: check if zsh already installed
  stat: "path=/usr/local/bin/zsh"
  register: zsh_installed

- name: check zsh version
  shell: /usr/local/bin/zsh --version
  register: zsh_version_check
  ignore_errors: yes
  changed_when: false
  when: zsh_installed.stat.exists

- block:
  - name: install compilation dependencies
    package:
      name: "{{ item }}"
      state: present
    with_items: "{{ zsh_dependencies }}"

  - name: download and extract zsh to "{{ zsh_temp_dir }}"
    become: yes
    unarchive:
      src: "https://github.com/zsh-users/zsh/archive/zsh-{{ zsh_version }}.tar.gz"
      dest: "{{ zsh_temp_dir }}"
      copy: no
      list_files: no
      # extra_opts: "--strip-components=1"
      creates: "{{ zsh_temp_dir }}/INSTALL"

  - name: run preconfig
    shell: ./Util/preconfig
    args:
      chdir: "{{ zsh_temp_dir }}/zsh-zsh-{{ zsh_version }}"
      creates: "{{ zsh_temp_dir }}/zsh-zsh-{{ zsh_version }}/configure"

  - name: run configure
    shell: ./configure --with-tcsetpgrp
    args:
      chdir: "{{ zsh_temp_dir }}/zsh-zsh-{{ zsh_version }}"
      creates: "{{ zsh_temp_dir }}/zsh-zsh-{{ zsh_version }}/Makefile"

  - name: make
    shell: make
    args:
      chdir: "{{ zsh_temp_dir }}/zsh-zsh-{{ zsh_version }}"
      creates: "{{ zsh_temp_dir }}/zsh-zsh-{{ zsh_version }}/Makefile"

  # We have to ignore the errors here becuase make install calls
  # "make install.man" inside the 'Doc' folder, which requires yodl to
  # actually build the man pages. Unfortunately, on Centos Yodl is basically
  # impossible to build, since it needs icmake and other ubuntu specific deps.
  # As such, we ignore errors here and rethrow them when it's a non-centos system.
  - name: install
    shell: make install
    become: yes
    args:
      chdir: "{{ zsh_temp_dir }}/zsh-zsh-{{ zsh_version }}"
      creates: "/usr/local/bin/zsh"
    ignore_errors: yes
    register: zsh_make_install
    no_log: "{{ ansible_os_family == 'RedHat' }}"

  - name: flag failure from make install step
    fail:
      msg: "command 'make install' failed in {{ zsh_temp_dir }}/zsh-zsh-{{ zsh_version }}"
    when: "zsh_make_install.failed and ansible_os_family != 'RedHat'"

  - name: sanity check new shell before we add it to '/etc/shells'
    shell: /usr/local/bin/zsh --version
    register: zsh_bin_check
    failed_when: zsh_version not in zsh_bin_check.stdout

  - name: add shell to /etc/shells
    become: yes
    lineinfile:
      path: /etc/shells
      line: '/usr/local/bin/zsh'

  when: not zsh_installed.stat.exists or zsh_version not in zsh_version_check.stdout

- name: change shell for "{{ item }}"
  become: yes
  user:
    name: "{{ item }}"
    shell: /usr/local/bin/zsh
  with_items: "{{ zsh_new_users }}"
  when: zsh_installed.stat.exists or zsh_make_install != None
